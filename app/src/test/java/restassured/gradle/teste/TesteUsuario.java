/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package restassured.gradle.teste;

import org.apache.http.HttpStatus;
import org.junit.Test;
import restassured.gradle.dominio.Usuario;

import java.util.HashMap;
import java.util.Map;

import static io.restassured.RestAssured.given;
import static org.hamcrest.CoreMatchers.*;
import static org.hamcrest.MatcherAssert.assertThat;


public class TesteUsuario extends TesteBase {

    private static final String LISTA_USUARIO_ENDPOINT = "/users";
    private static final String CRIA_USUARIO_ENDPOINT = "/users";
    private static final String MOSTRA_USUARIO_ENDPOINT = "/users/{userId}";

    @Test
    public void testeMostraPaginaEspecifica() {

        given().
                params("page","2").
        when().
                get(LISTA_USUARIO_ENDPOINT).
        then().
                statusCode(HttpStatus.SC_OK).
                body("page", is(2)).
                body("data", is(notNullValue()));
    }

    @Test
    public void testeCriaUsuarioComSucesso(){
        //hashMap função para nomear indices de um array
        Map<String, String> usuario = new HashMap<>();
        usuario.put("name","morpheus");
        usuario.put("job","leader");
        given().
                body(usuario).
        when().
                post(CRIA_USUARIO_ENDPOINT).
        then().
                statusCode(HttpStatus.SC_CREATED).
                body("name",is("morpheus"));
    }

    @Test
    public void testeTamanhoDosItemsMostradoIgualAoPerPage() {
        int paginaSolicitada = 2;
        int perpateEsperado = retornaperpageEsperado(paginaSolicitada);

        given().
                params("page", paginaSolicitada).
        when().
                get(LISTA_USUARIO_ENDPOINT).
        then().
                statusCode(HttpStatus.SC_OK).
                body(
                        "page", is(paginaSolicitada),
                        "data.size()",is(perpateEsperado),
                        "data.findAll {it.avatar.startsWith('https://reqres.in')}.size()",is(perpateEsperado)
                );
    }

    private int retornaperpageEsperado(int page) {
     return  given(). //variavel para pegar o parametro de retorno da resposta per_page
                params("page",page).
             when().
                get(LISTA_USUARIO_ENDPOINT).
             then().
                statusCode(HttpStatus.SC_OK).
             extract(). //função que extrai o valor do parametro de retorno do response
                     path("per_page");
    }

    //teste que faz a desserialização de um JSON para objeto Java
    @Test
    public void testeMostraUsuarioEspecifico(){
     Usuario usuario = given().
            pathParam("userId", 2).
        when().
            get(MOSTRA_USUARIO_ENDPOINT).
        then().
             statusCode(HttpStatus.SC_OK).
        extract().
            body().jsonPath().getObject("data",Usuario.class);
            assertThat(usuario.getEmail(), containsString("@reqres.in"));
            assertThat(usuario.getName(), is("Janet"));
            assertThat(usuario.getLastName(), is("Weaver"));

    }


}


